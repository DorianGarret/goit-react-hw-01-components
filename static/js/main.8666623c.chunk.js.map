{"version":3,"sources":["components/Profile/profile.styled.js","components/Profile/Profile.jsx","components/Statistics/statistics.styled.js","components/Statistics/Statistics.jsx","components/FriendList/friendList.styled.js","components/FriendList/FriendList.jsx","components/TransactionHistory/transactionHistory.styled.js","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["Wrapper","styled","div","Description","Image","img","Name","p","Tag","Location","List","ul","ListItem","li","Label","span","Quantity","Profile","name","avatar","tag","location","stats","followers","views","likes","src","alt","article","Title","h2","themes","css","props","type","Percentage","Statistics","title","map","id","label","percentage","statuses","online","offline","Status","isOnline","Avatar","FriendList","friends","Table","table","Thead","thead","Tbody","tbody","TransactionHistory","transactions","amount","currency","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8666623c.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  max-width: 350px;\n  border-radius: 0.7rem;\n  background-color: var(--bs-light);\n  border: 1px solid var(--bs-gray-300);\n  overflow: hidden;\n  box-shadow: var(--bs-shadow);\n  margin: 2rem;\n`\n\nexport const Description = styled.div`\n  padding: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`\n\nexport const Image = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  margin: 0 auto 20px;\n  background-color: var(--bs-gray-500);\n`\n\nexport const Name = styled.p`\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin-bottom: 16px;\n`\n\nexport const Tag = styled.p`\n  font-size: 1.2rem;\n  font-weight: 400;\n  margin-bottom: 16px;\n  color: var(--bs-gray-500);\n`\n\nexport const Location = styled.p`\n  font-size: 1.2rem;\n  font-weight: 700;\n  margin-bottom: 0;\n  color: var(--bs-gray-600);\n`\n\nexport const List = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 0;\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  padding: 16px;\n  border-top: 1px solid var(--bs-gray-500);\n  background-color: var(--bs-gray-200);\n  &:not(:last-child) {\n    border-right: 1px solid var(--bs-gray-500);\n  }\n`\n\nexport const Label = styled.span`\n  font-size: 1rem;\n  font-weight: 400;\n  margin-bottom: 8px;\n  color: var(--bs-gray-600);\n`\n\nexport const Quantity = styled.span`\n  font-size: 1.2rem;\n  font-weight: 700;\n`\n","import PropTypes from 'prop-types'\n\nimport {\n  Wrapper,\n  Description,\n  Image,\n  Name,\n  Tag,\n  Location,\n  List,\n  ListItem,\n  Label,\n  Quantity,\n} from './profile.styled'\n\nconst Profile = ({ name, avatar, tag, location, stats: { followers, views, likes } }) => {\n  return (\n    <Wrapper>\n      <Description>\n        <Image src={avatar} alt={name} />\n        <Name>{name}</Name>\n        <Tag>{`@${tag}`}</Tag>\n        <Location>{location}</Location>\n      </Description>\n      <List>\n        <ListItem>\n          <Label>Followers</Label>\n          <Quantity>{followers}</Quantity>\n        </ListItem>\n        <ListItem>\n          <Label>Views</Label>\n          <Quantity>{views}</Quantity>\n        </ListItem>\n        <ListItem>\n          <Label>Likes</Label>\n          <Quantity>{likes}</Quantity>\n        </ListItem>\n      </List>\n    </Wrapper>\n  )\n}\n\nProfile.propTypes = {\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  followers: PropTypes.number,\n  views: PropTypes.number,\n  likes: PropTypes.number,\n}\n\nexport default Profile\n","import styled from '@emotion/styled'\nimport { css } from '@emotion/react'\n\nexport const Wrapper = styled.article`\n  max-width: 500px;\n  text-align: center;\n\n  border: 1px solid var(--bs-gray-300);\n  box-shadow: var(--bs-shadow);\n  overflow: hidden;\n  margin: 2rem;\n  border-radius: 0.5rem;\n`\n\nexport const Title = styled.h2`\n  padding: 1.5rem 0;\n  text-transform: uppercase;\n  font-weight: 700;\n  color: var(--bs-gray-600);\n`\n\nexport const List = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n// Вот это я додумался\nconst themes = {\n  '.docx': css`\n    background-color: var(--bs-cyan);\n  `,\n  '.pdf': css`\n    background-color: var(--bs-purple);\n  `,\n  '.mp3': css`\n    background-color: var(--bs-red);\n  `,\n  '.psd': css`\n    background-color: var(--bs-info);\n  `,\n}\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  padding: 1.2rem;\n  color: var(--bs-white);\n  ${(props) => themes[props.type]};\n  /* composes в emotion нет =) */\n`\n\nexport const Label = styled.span`\n  font-size: 1rem;\n`\n\nexport const Percentage = styled.span`\n  font-size: 1.5rem;\n  font-weight: 500;\n`\n","import PropTypes from 'prop-types'\nimport { Wrapper, Title, List, ListItem, Label, Percentage } from './statistics.styled'\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n      <List>\n        {stats.map(({ id, label, percentage }) => {\n          return (\n            <ListItem key={id} type={label}>\n              <Label>{label}</Label>\n              <Percentage>{percentage}%</Percentage>\n            </ListItem>\n          )\n        })}\n      </List>\n    </Wrapper>\n  )\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n}\n\nexport default Statistics\n","import styled from '@emotion/styled'\nimport { css } from '@emotion/react'\n\nexport const Wrapper = styled.article`\n  max-width: 500px;\n  text-align: center;\n\n  border: 1px solid var(--bs-gray-300);\n  box-shadow: var(--bs-shadow);\n  overflow: hidden;\n  margin: 2rem;\n  border-radius: 0.5rem;\n`\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  :not(:last-of-type) {\n    margin: 1rem 1rem 0 1rem;\n  }\n  :last-of-type {\n    margin: 1rem;\n  }\n  border-radius: 0.3rem;\n  border: 1px solid var(--bs-gray-300);\n  box-shadow: 0px 5px 4px -1px rgba(0, 0, 0, 0.88);\n`\nconst statuses = {\n  online: css`\n    background-color: var(--bs-success);\n  `,\n  offline: css`\n    background-color: var(--bs-danger);\n  `,\n}\nexport const Status = styled.span`\n  display: inline-block;\n  margin-left: 10px;\n  width: 1.2rem;\n  height: 1.2rem;\n  border-radius: 50%;\n  ${(props) => (props.isOnline ? statuses.online : statuses.offline)}\n`\n\nexport const Avatar = styled.img`\n  margin: 0.7rem;\n  width: 5rem;\n  border-radius: 0.3rem;\n  background-color: var(--bs-gray-500);\n`\n\nexport const Name = styled.p`\n  font-weight: 500;\n  font-size: 2.2em;\n  margin: 0;\n  margin-left: 1rem;\n`\n","import PropTypes from 'prop-types'\nimport { Wrapper, List, ListItem, Status, Avatar, Name } from './friendList.styled'\n\nconst FriendList = ({ friends }) => {\n  return (\n    <Wrapper>\n      <List>\n        {friends.map(({ id, isOnline, avatar, name }) => {\n          return (\n            <ListItem key={id}>\n              <Status isOnline={isOnline}></Status>\n              <Avatar src={avatar} alt={name} />\n              <Name>{name}</Name>\n            </ListItem>\n          )\n        })}\n      </List>\n    </Wrapper>\n  )\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n}\n\nexport default FriendList\n","import styled from '@emotion/styled'\n\nexport const Table = styled.table`\n  width: 50vw;\n  margin: 0 auto;\n  box-shadow: 0px 5px 4px -1px rgba(0, 0, 0, 0.88);\n  margin-bottom: 5rem;\n\n  th {\n    text-align: center;\n    padding: 1rem 0;\n  }\n`\n\nexport const Thead = styled.thead`\n  th {\n    text-transform: uppercase;\n    color: var(--bs-white);\n    background-color: var(--bs-info);\n    :not(:last-of-type) {\n      border-right: 1px solid var(--bs-white);\n    }\n  }\n`\n\nexport const Tbody = styled.tbody`\n  color: var(--bs-gray-600);\n  tr {\n    :nth-of-type(even) {\n      background-color: var(--bs-gray-200);\n    }\n  }\n  th {\n    :not(:last-of-type) {\n      border-right: 1px solid var(--bs-gray-500);\n    }\n  }\n`\n","import PropTypes from 'prop-types'\n\nimport { Table, Thead, Tbody } from './transactionHistory.styled'\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <Table>\n      <Thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </Thead>\n      <Tbody>\n        {transactions.map(({ id, type, amount, currency }) => {\n          return (\n            <tr key={id}>\n              <th>{type}</th>\n              <th>{amount}</th>\n              <th>{currency}</th>\n            </tr>\n          )\n        })}\n      </Tbody>\n    </Table>\n  )\n}\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n}\n\nexport default TransactionHistory\n","import user from 'data/user.json'\nimport statisticalData from 'data/statistical-data.json'\nimport friends from 'data/friends.json'\nimport transactions from 'data/transactions.json'\n\nimport Profile from 'components/Profile'\nimport Statistics from 'components/Statistics'\nimport FriendList from 'components/FriendList'\nimport TransactionHistory from 'components/TransactionHistory'\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        avatar={user.avatar}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App/App'\nimport './index.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}