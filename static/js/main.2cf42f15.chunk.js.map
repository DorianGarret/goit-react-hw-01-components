{"version":3,"sources":["components/Profile/Profile.styled.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.styled.jsx","utils/getRandomHexColor.js","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["Wrapper","styled","div","Description","Image","img","Name","p","Tag","Location","List","ul","ListItem","li","Label","span","Quantity","Profile","name","avatar","tag","location","stats","followers","views","likes","src","alt","article","Title","h2","Percentage","getRandomHexColor","Math","floor","random","toString","Statistics","title","map","id","label","percentage","style","backgroundColor","App","user","statisticalData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEaA,EAAUC,IAAOC,IAAV,iOAUPC,EAAcF,IAAOC,IAAV,8IAQXE,EAAQH,IAAOI,IAAV,uJAQLC,EAAOL,IAAOM,EAAV,+FAMJC,EAAMP,IAAOM,EAAV,6HAOHE,EAAWR,IAAOM,EAAV,0HAORG,EAAOT,IAAOU,GAAV,2EAMJC,EAAWX,IAAOY,GAAV,mSAaRC,EAAQb,IAAOc,KAAV,0HAOLC,EAAWf,IAAOc,KAAV,uE,OCjBNE,EAxCC,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,KAAMC,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,IAAKC,EAAmD,EAAnDA,SAAmD,IAAzCC,MAASC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,MACzE,OACE,eAACzB,EAAD,WACE,eAACG,EAAD,WACE,cAACC,EAAD,CAAOsB,IAAKP,EAAQQ,IAAKT,IACzB,cAACZ,EAAD,UAAOY,IACP,eAACV,EAAD,WACE,cAAC,IAAD,IACCY,KAEH,cAACX,EAAD,UAAWY,OAEb,eAACX,EAAD,WACE,eAACE,EAAD,WACE,cAACE,EAAD,wBACA,cAACE,EAAD,UAAWO,OAEb,eAACX,EAAD,WACE,cAACE,EAAD,oBACA,cAACE,EAAD,UAAWQ,OAEb,eAACZ,EAAD,WACE,cAACE,EAAD,oBACA,cAACE,EAAD,UAAWS,cCtCRzB,EAAUC,IAAO2B,QAAV,0LAUPC,EAAQ5B,IAAO6B,GAAV,mIAOLpB,EAAOT,IAAOU,GAAV,gGAOJC,EAAWX,IAAOY,GAAV,4JASRC,EAAQb,IAAOc,KAAV,gDAILgB,EAAa9B,IAAOc,KAAV,uECnCRiB,MAJf,WACE,MAAM,IAAN,OAAWC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,MCgC5CC,EA7BI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOhB,EAAY,EAAZA,MAC3B,OACE,eAAC,EAAD,WACE,cAACO,EAAD,UAAQS,IACR,cAAC,EAAD,UACGhB,EAAMiB,KAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACvB,OACE,eAAC,EAAD,CAAmBC,MAAO,CAAEC,gBAAgB,GAAD,OAAKZ,MAAhD,UACE,cAAC,EAAD,UAAQS,IACR,eAACV,EAAD,WAAaW,EAAb,SAFaF,YCUZK,MAff,WACE,OACE,qCACE,cAAC,EAAD,CACE3B,KAAM4B,EAAK5B,KACXC,OAAQ2B,EAAK3B,OACbC,IAAK0B,EAAK1B,IACVC,SAAUyB,EAAKzB,SACfC,MAAOwB,EAAKxB,QAEd,cAAC,EAAD,CAAYgB,MAAM,eAAehB,MAAOyB,QCX9CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.2cf42f15.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  max-width: 350px;\n  border-radius: 0.7rem;\n  background-color: var(--bs-light);\n  border: 1px solid var(--bs-gray-300);\n  overflow: hidden;\n  box-shadow: var(--bs-shadow);\n  margin: 2rem;\n`\n\nexport const Description = styled.div`\n  padding: 50px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`\n\nexport const Image = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  margin: 0 auto 20px;\n  background-color: var(--bs-gray-500);\n`\n\nexport const Name = styled.p`\n  font-size: 1.5rem;\n  font-weight: 700;\n  margin-bottom: 16px;\n`\n\nexport const Tag = styled.p`\n  font-size: 1.2rem;\n  font-weight: 400;\n  margin-bottom: 16px;\n  color: var(--bs-gray-500);\n`\n\nexport const Location = styled.p`\n  font-size: 1.2rem;\n  font-weight: 700;\n  margin-bottom: 0;\n  color: var(--bs-gray-600);\n`\n\nexport const List = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 0;\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  padding: 16px;\n  border-top: 1px solid var(--bs-gray-500);\n  background-color: var(--bs-gray-200);\n  &:not(:last-child) {\n    border-right: 1px solid var(--bs-gray-500);\n  }\n`\n\nexport const Label = styled.span`\n  font-size: 1rem;\n  font-weight: 400;\n  margin-bottom: 8px;\n  color: var(--bs-gray-600);\n`\n\nexport const Quantity = styled.span`\n  font-size: 1.2rem;\n  font-weight: 700;\n`\n","import PropTypes from 'prop-types'\n\nimport { MdOutlineAlternateEmail } from 'react-icons/md'\n\nimport {\n  Wrapper,\n  Description,\n  Image,\n  Name,\n  Tag,\n  Location,\n  List,\n  ListItem,\n  Label,\n  Quantity,\n} from './Profile.styled'\n\nconst Profile = ({ name, avatar, tag, location, stats: { followers, views, likes } }) => {\n  return (\n    <Wrapper>\n      <Description>\n        <Image src={avatar} alt={name} />\n        <Name>{name}</Name>\n        <Tag>\n          <MdOutlineAlternateEmail />\n          {tag}\n        </Tag>\n        <Location>{location}</Location>\n      </Description>\n      <List>\n        <ListItem>\n          <Label>Followers</Label>\n          <Quantity>{followers}</Quantity>\n        </ListItem>\n        <ListItem>\n          <Label>Views</Label>\n          <Quantity>{views}</Quantity>\n        </ListItem>\n        <ListItem>\n          <Label>Likes</Label>\n          <Quantity>{likes}</Quantity>\n        </ListItem>\n      </List>\n    </Wrapper>\n  )\n}\n\nProfile.propTypes = {\n  name: PropTypes.string,\n  avatar: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  followers: PropTypes.number,\n  views: PropTypes.number,\n  likes: PropTypes.number,\n}\n\nexport default Profile\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.article`\n  max-width: 500px;\n  text-align: center;\n\n  border: 1px solid var(--bs-gray-300);\n  box-shadow: var(--bs-shadow);\n  overflow: hidden;\n  margin: 2rem;\n`\n\nexport const Title = styled.h2`\n  padding: 1.5rem 0;\n  text-transform: uppercase;\n  font-weight: 700;\n  color: var(--bs-gray-600);\n`\n\nexport const List = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  padding: 1.2rem;\n  color: var(--bs-white);\n`\n\nexport const Label = styled.span`\n  font-size: 1rem;\n`\n\nexport const Percentage = styled.span`\n  font-size: 1.5rem;\n  font-weight: 500;\n`\n","function getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`\n}\n\nexport default getRandomHexColor\n","import PropTypes from 'prop-types'\nimport { Wrapper, Title, List, ListItem, Label, Percentage } from './Statistics.styled'\nimport getRandomHexColor from 'utils/getRandomHexColor'\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <List>\n        {stats.map(({ id, label, percentage }) => {\n          return (\n            <ListItem key={id} style={{ backgroundColor: `${getRandomHexColor()}` }}>\n              <Label>{label}</Label>\n              <Percentage>{percentage}%</Percentage>\n            </ListItem>\n          )\n        })}\n      </List>\n    </Wrapper>\n  )\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n}\n\nexport default Statistics\n","import user from 'data/user.json'\nimport statisticalData from 'data/statistical-data.json'\n\nimport Profile from 'components/Profile/Profile'\nimport Statistics from 'components/Statistics/Statistics'\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        avatar={user.avatar}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}